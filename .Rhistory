operation$value == stringfish::sf_substr(x$input, 3, 3)
)
)
vctrs::vec_slice(
select,
select$table == stringfish::sf_substr(x$input, 1, 3)
) |>
dplyr::select(name_4:rows)
# Filtered pin to pass on
x$select <- vctrs::vec_slice(
select,
select$table == stringfish::sf_substr(x$input, 1, 3)
) |>
dplyr::select(name_4:rows)
x
x$select |>
dplyr::mutate(axis = "4") |>
dplyr::select(axis,
name = name_4,
value = code_4,
label = label_4) |>
dplyr::distinct()
# Create part object
x$opt <- part <- x$select |>
dplyr::mutate(axis = "4") |>
dplyr::select(axis,
name = name_4,
value = code_4,
label = label_4) |>
dplyr::distinct()
# Return all parts
if (stringfish::sf_nchar(x$input) == 3L) {.cli(x); invisible(x)}
x
x$input <- "0155"
.clierr(x, 4)
vctrs::vec_rbind(
x$head,
vctrs::vec_slice(
part,
part$value == stringfish::sf_substr(x$input, 4, 4)
)
)
x$head <- vctrs::vec_rbind(
x$head,
vctrs::vec_slice(
part,
part$value == stringfish::sf_substr(x$input, 4, 4)
)
)
switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"3" = ,
"F" = ,
"G" = ,
"X" = includes(section = stringfish::sf_substr(x$input, 1, 1),
axis = "4",
col = "label",
search = fuimus::delister(x$head[4, 4])),
dplyr::tibble(section = character(0),
axis = character(0),
name = character(0),
label = character(0),
includes = character(0)))
# TODO Axis 4 Includes
x$includes <- switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"3" = ,
"F" = ,
"G" = ,
"X" = includes(section = stringfish::sf_substr(x$input, 1, 1),
axis = "4",
col = "label",
search = fuimus::delister(x$head[4, 4])),
dplyr::tibble(section = character(0),
axis = character(0),
name = character(0),
label = character(0),
includes = character(0)))
dplyr::filter(
x$select,
row == stringfish::sf_substr(x$input, 1, 4)
) |>
dplyr::select(rowid:rows) |>
tidyr::unnest(rows) |>
dplyr::distinct() |>
dplyr::rename(value = code)
x$select
vctrs::vec_slice(
x$select,
x$select$row == stringfish::sf_substr(x$input, 1, 4)
)
vctrs::vec_slice(
x$select,
x$select$row == stringfish::sf_substr(x$input, 1, 4)
) |>
dplyr::select(rowid:rows) |>
tidyr::unnest(rows) |>
dplyr::distinct() |>
dplyr::rename(value = code)
vctrs::vec_slice(
x$select,
x$select$row == stringfish::sf_substr(x$input, 1, 4)
)
vctrs::vec_slice(
x$select,
x$select$row == stringfish::sf_substr(x$input, 1, 4)
) |>
dplyr::select(rowid:rows) |>
tidyr::unnest(rows) |>
dplyr::distinct() |>
dplyr::rename(value = code)
x$select <- vctrs::vec_slice(
x$select,
x$select$row == stringfish::sf_substr(x$input, 1, 4)
) |>
dplyr::select(rowid:rows) |>
tidyr::unnest(rows) |>
dplyr::distinct() |>
dplyr::rename(value = code)
x
as.data.frame(x$select)
collapse::rsplit(x$select$axis)
collapse::rsplit(x$select, x$select$axis)
x$select <- collapse::rsplit(x$select, x$select$axis)
collapse::funique(x$select$`5`[c("axis", "name", "value", "label")])
x$opt <- collapse::funique(x$select$`5`[c("axis", "name", "value", "label")])
# Return all approaches
if (stringfish::sf_nchar(x$input) == 4L)  {.cli(x); invisible(x)}
x$input <- "01550"
.clierr(x, 5)
x
purrr::list_flatten(x)
x <- purrr::list_flatten(x)
vctrs::vec_slice(
x$select_5,
x$select_5$value == stringfish::sf_substr(x$input, 5, 5))
x$select_5 <- vctrs::vec_slice(
x$select_5,
x$select_5$value == stringfish::sf_substr(x$input, 5, 5))
collapse::funique(x$select_5$rowid)
x$id <- collapse::funique(x$select_5$rowid)
vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_5[c("axis", "name", "value", "label")]
)
)
x$head <- vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_5[c("axis", "name", "value", "label")]
)
)
fuimus::search_in(
x$select_6,
x$select_6$rowid,
x$id
)
x$select_6 <- fuimus::search_in(
x$select_6,
x$select_6$rowid,
x$id
)
fuimus::search_in(
x$select_7,
x$select_7$rowid,
x$id
)
x$select_7 <- fuimus::search_in(
x$select_7,
x$select_7$rowid,
x$id
)
switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"1" = ,
"2" = ,
"3" = ,
"4" = ,
"7" = ,
"8" = ,
"9" = ,
"F" = ,
"X" = vctrs::vec_rbind(
x$definitions,
definitions(
section = stringfish::sf_substr(x$input, 1, 1),
axis = "5",
col = "value",
search = stringfish::sf_substr(x$input, 5, 5),
# col = "label",
# search = delister(x$head[5, 4])
display = TRUE)
),
vctrs::vec_rbind(
x$definitions,
dplyr::tibble(label = character(0),
definition = character(0))))
# Axis 5 Definition
x$definitions <- switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"1" = ,
"2" = ,
"3" = ,
"4" = ,
"7" = ,
"8" = ,
"9" = ,
"F" = ,
"X" = vctrs::vec_rbind(
x$definitions,
definitions(
section = stringfish::sf_substr(x$input, 1, 1),
axis = "5",
col = "value",
search = stringfish::sf_substr(x$input, 5, 5),
# col = "label",
# search = delister(x$head[5, 4])
display = TRUE)
),
vctrs::vec_rbind(
x$definitions,
dplyr::tibble(label = character(0),
definition = character(0))))
x
collapse::funique(x$select_6[c("axis", "name", "value", "label")])
x$opt <- collapse::funique(x$select_6[c("axis", "name", "value", "label")])
# Return all devices
if (stringfish::sf_nchar(x$input) == 5L) {.cli(x); invisible(x)}
x$input
x$input <- "01550Z"
.clierr(x, 6)
vctrs::vec_slice(
x$select_6,
x$select_6$value == stringfish::sf_substr(x$input, 6, 6)
)
x$select_6 <- vctrs::vec_slice(
x$select_6,
x$select_6$value == stringfish::sf_substr(x$input, 6, 6)
)
vctrs::vec_set_intersect(
x$id,
x$select_6$rowid
)
x$id <- vctrs::vec_set_intersect(
x$id,
x$select_6$rowid
)
vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_6[c("axis", "name", "value", "label")]
)
)
x$head <- vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_6[c("axis", "name", "value", "label")]
)
)
fuimus::search_in(
x$select_5,
x$select_5$rowid,
x$id
)
x$select_5 <- fuimus::search_in(
x$select_5,
x$select_5$rowid,
x$id
)
fuimus::search_in(
x$select_7,
x$select_7$rowid,
x$id
)
x$select_7 <- fuimus::search_in(
x$select_7,
x$select_7$rowid,
x$id
)
switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"3" = ,
"F" = ,
"G" = ,
"X" = vctrs::vec_rbind(
x$includes,
includes(section = stringfish::sf_substr(x$input, 1, 1),
axis = "4",
col = "label",
search = fuimus::delister(x$head[6, 4]))
),
vctrs::vec_rbind(
x$includes,
dplyr::tibble(section = character(0),
axis = character(0),
name = character(0),
label = character(0),
includes = character(0))))
# TODO Axis 6 Includes
x$includes <- switch(
stringfish::sf_substr(x$input, 1, 1),
"0" = ,
"3" = ,
"F" = ,
"G" = ,
"X" = vctrs::vec_rbind(
x$includes,
includes(section = stringfish::sf_substr(x$input, 1, 1),
axis = "4",
col = "label",
search = fuimus::delister(x$head[6, 4]))
),
vctrs::vec_rbind(
x$includes,
dplyr::tibble(section = character(0),
axis = character(0),
name = character(0),
label = character(0),
includes = character(0))))
x
collapse::funique(x$select_7[c("axis", "name", "value", "label")])
x$opt <- collapse::funique(x$select_7[c("axis", "name", "value", "label")])
# Return all devices
if (stringfish::sf_nchar(x$input) == 6L) {.cli(x); invisible(x)}
x$input <- "01550ZZ"
.clierr(x, 7)
vctrs::vec_slice(
x$select_7,
x$select_7$value == stringfish::sf_substr(x$input, 7, 7)
)
x$select_7 <- vctrs::vec_slice(
x$select_7,
x$select_7$value == stringfish::sf_substr(x$input, 7, 7)
)
vctrs::vec_set_intersect(
x$id,
x$select_7$rowid
)
x$id <- vctrs::vec_set_intersect(
x$id,
x$select_7$rowid
)
vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_7[c("axis", "name", "value", "label")]
)
)
x$head <- vctrs::vec_rbind(
x$head,
collapse::funique(
x$select_7[c("axis", "name", "value", "label")]
)
)
fuimus::search_in(
x$select_5,
x$select_5$rowid,
x$id
)
x$select_5 <- fuimus::search_in(
x$select_5,
x$select_5$rowid,
x$id
)
fuimus::search_in(
x$select_6,
x$select_7$rowid,
x$id
)
x$select_6 <- fuimus::search_in(
x$select_6,
x$select_7$rowid,
x$id
)
x
length(x$id) == 1L
x$input
procedural::order(search = x$input)$description_code
dplyr::tibble(
code = x$input,
description = procedural::order(search = x$input)$description_code,
)
x$head
fuimus::null_if_empty(x$definitions)
fuimus::null_if_empty(x$includes |>
tidyr::nest(includes = "includes") |>
dplyr::mutate(includes = purrr::map_chr(
includes, ~paste(.x$includes, collapse = ", ")
)
))
list(
code = x$input,
description = procedural::order(search = x$input)$description_code,
procedure = dplyr::tibble(
code = x$input,
description = procedural::order(search = x$input)$description_code,
),
axes = x$head,
definitions = fuimus::null_if_empty(x$definitions),
includes = fuimus::null_if_empty(x$includes |>
tidyr::nest(includes = "includes") |>
dplyr::mutate(includes = purrr::map_chr(
includes, ~paste(.x$includes, collapse = ", ")
)
))
) |>
purrr::compact()
x <- list(
code = x$input,
description = procedural::order(search = x$input)$description_code,
procedure = dplyr::tibble(
code = x$input,
description = procedural::order(search = x$input)$description_code,
),
axes = x$head,
definitions = fuimus::null_if_empty(x$definitions),
includes = fuimus::null_if_empty(x$includes |>
tidyr::nest(includes = "includes") |>
dplyr::mutate(includes = purrr::map_chr(
includes, ~paste(.x$includes, collapse = ", ")
)
))
) |>
purrr::compact()
x
devtools::load_all(".")
pcs()
pcs("X")
pcs("X0")
pcs("X05")
pcs("X051")
pcs("X0513")
pcs("X05132")
pcs("X051329")
is_section_0(c("00DN0ZZ", "01UB3KZ", "0BBBFBB"))
try(is_section_0("1164"))
1380 / 78603
devtools::load_all(".")
x <- c("00DN0ZZ", "01UB3KZ", "0BBBFBB")
is_section_0(x)
is_section_0(pcs_code = x)
install.packages("report")
pkgdown::preview_site()
pkgdown::preview_site()
pkgdown::build_home()
pkgdown::preview_site(path='index.html')
pins::pin_read(mount_board(), "tables_rows")
pins::pin_read(proceddural::mount_board(), "tables_rows")
pins::pin_read(procedural::mount_board(), "tables_rows")
devtools::load_all(".")
pins::pin_read(procedural::mount_board(), "tables_rows")
devtools::load_all(".")
rows("00X")
list_pins()
get_pin("pcs_tbl2")
get_pin("pcs_tbl3")
rmarkdown:::highlighters()
x = NULL
toupper(as.character(x))
toupper(x)
x
as.character(x)
if (!is.null(x)) x <- stringfish::sf_toupper(as.character(x))
stringfish::sf_toupper(as.character(x))
fuimus::search_in_if(
sys,
sys$section,
x
)
get_pin("systems")
list_pins()
get_pin("tables_order")
collapse::funique(get_pin("tables_order"))
collapse::funique(get_pin("tables_order")$table)
tbls <- collapse::funique(get_pin("tables_order")$table)
vctrs::vec_size(vec)
vctrs::vec_size(tbls)
northstar::construct_regex2(tbls)
get_pin("tables_order")
get_pin("tables_order") |>
dplyr::pull(stringfish::sf_substr(table, 1, 2))
get_pin("tables_order") |>
dplyr::pull(table)
vec <- get_pin("tables_order") |>
dplyr::pull(table) |>
dplyr::pull(code)
collapse::funique(stringfish::sf_substr(vec, 1, 2))
vec <- get_pin("tables_order") |>
dplyr::pull(table)
collapse::funique(stringfish::sf_substr(vec, 1, 2))
tbls <- collapse::funique(stringfish::sf_substr(vec, 1, 2))
vctrs::vec_size(tbls)
northstar::construct_regex2(tbls)
get_pin("tables_order")
vec <- get_pin("tables_order") |>
dplyr::pull(row)
collapse::funique(vec)
tbls <- collapse::funique(vec)
vctrs::vec_size(tbls)
northstar::construct_regex2(tbls)
devtools::load_all(".")
get_pin("index_v1")
get_pin("index_v2")
get_pin("newindex_ind2")
get_pin("newindex_ind3")
get_pin("newindex_usesee")
