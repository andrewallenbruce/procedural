select(rowid, pos)
axis_idx <- def |>
filter(elem == "axis") |>
pivot_wider(names_from = elem,
values_from = value) |>
fill(axis, .direction = "updown") |>
select(rowid, axis)
posname_idx <- def |>
filter(level == "axis_title") |>
pivot_wider(names_from = level,
values_from = value) |>
select(rowid, axis_title)
def <- left_join(def, sec_idx) |>
left_join(secname_idx) |>
left_join(axis_idx) |>
left_join(posname_idx) |>
fill(section_code, section_title) |>
fill(axis, axis_title) |>
filter(elem != "section") |>
filter(is.na(attr)) |>
select(-attr) |>
filter(!is.na(value))
term_idx <- def |>
filter(level == "axis_terms_title") |>
mutate(term = value) |>
select(rowid, term)
def <- left_join(def, term_idx)
lr_idx <- def |>
mutate(r = str_detect(term, ", Right"),
l = str_detect(term, ", Left"),
b = str_detect(term, ", Bilateral"),
lrb = case_when(r == TRUE ~ TRUE, .default = NA),
lrb = case_when(l == TRUE ~ TRUE, .default = lrb),
lrb = case_when(b == TRUE ~ TRUE, .default = lrb)) |>
select(-r, -l, -b) |>
filter(lrb %in% TRUE) |>
mutate(lrb = term,
term = str_remove(term, ", Right"),
term = str_remove(term, ", Left"),
term = str_remove(term, ", Bilateral")) |>
select(rowid, term, lrb)
lr_idx[7, 2]$term <- "Adrenal Gland"
lr_idx[31, 2]$term <- "Carotid Body"
lr_idx[130, 2]$term <- "Kidney"
lr_idx[262, 2]$term <- "Ureter"
lr_nest <- lr_idx |>
select(term, lrb) |>
nest(.by = c(term), .key = "lrb")
lr_idx <- lr_idx |>
select(rowid, term) |>
left_join(lr_nest)
lr_idx |> print(n = 300)
names(lr_idx) <- c("rowid", "term2", "lrb")
def <- left_join(def, lr_idx) |>
mutate(term2 = case_when(is.na(term2) ~ term, .default = term2)) |>
select(-elemid, -term, -level) |>
rename(term = term2) |>
fill(term) |>
group_by(term) |>
fill(lrb) |>
ungroup() |>
filter(elem != "title") |>
unnest(lrb, keep_empty = TRUE) |>
mutate(term = case_when(!is.na(lrb) ~ lrb, .default = term)) |>
select(section = section_code,
section_title,
axis,
axis_title,
term,
# lrb,
type = elem,
description = value) |>
group_by(section, section_title, axis, axis_title, term) |>
nest(elements = c(type, description)) |>
ungroup()
def |> select(section,
section_name = section_title,
axis,
axis_name = axis_title,
label = term,
elements)
def <- def |> select(section,
section_name = section_title,
axis,
axis_name = axis_title,
label = term,
elements)
def <- def |>
select(section,
section_name = section_title,
axis,
axis_name = axis_title,
label = term,
elements)
def
board <- pins::board_folder(here::here("pkgdown/assets/pins-board"))
board |> pins::pin_write(def,
name = "definitions",
description = "ICD-10-PCS 2024 Definitions",
type = "qs")
board |> pins::write_board_manifest()
library(procedural)
devtools::load_all(".")
pcs_matrix()
approaches("2")
dplyr::tibble(
axis = 5L,
name = "Approach",
value = c(0:9, LETTERS[2:4], LETTERS[6:8], LETTERS[24]),
label = c('Open',
'Open Approach',
'External Approach',
'Percutaneous',
'Percutaneous Endoscopic Approach',
'Percutaneous Approach',
'Via Natural or Artificial Opening',
'Via Natural or Artificial Opening Endoscopic',
'Via Natural or Artificial Opening Endoscopic Approach',
'Via Natural or Artificial Opening with Percutaneous Endoscopic Assistance'))
c(0:9, LETTERS[2:4], LETTERS[6:8], LETTERS[24])
c(0:9, LETTERS[c(2:4, 6:8, 24)])
devtools::load_all(".")
sections()
sections("0")
sections("2")
sections("x")
devtools::load_all(".")
dplyr::tibble(
section = character(0),
axis = "2",
name = character(0),
value = character(0),
label = character(0))
dplyr::tibble(
section = NA_character_,
axis = as.character(2L),
name = NA_character_,
value = NA_character_,
label = NA_character_)
dplyr::tibble(
section = "0",
axis = "2",
name = "Body System",
value = c(0:9, LETTERS[c(2:4, 6:8, 10:14, 16:25)]),
label = c("Central Nervous System and Cranial Nerves",
"Peripheral Nervous System",
"Heart and Great Vessels",
"Upper Arteries",
"Lower Arteries",
"Upper Veins",
"Lower Veins",
"Lymphatic and Hemic Systems",
"Eye",
"Ear, Nose, Sinus",
"Respiratory System",
"Mouth and Throat",
"Gastrointestinal System",
"Hepatobiliary System and Pancreas",
"Endocrine System",
"Skin and Breast",
"Subcutaneous Tissue and Fascia",
"Muscles",
"Tendons",
"Bursae and Ligaments",
"Head and Facial Bones",
"Upper Bones",
"Lower Bones",
"Upper Joints",
"Lower Joints",
"Urinary System",
"Female Reproductive System",
"Male Reproductive System",
"Anatomical Regions, General",
"Anatomical Regions, Upper Extremities",
"Anatomical Regions, Lower Extremities"))
list(
section = "0",
axis = "2",
name = "Body System",
value = c(0:9, LETTERS[c(2:4, 6:8, 10:14, 16:25)]),
label = c("Central Nervous System and Cranial Nerves",
"Peripheral Nervous System",
"Heart and Great Vessels",
"Upper Arteries",
"Lower Arteries",
"Upper Veins",
"Lower Veins",
"Lymphatic and Hemic Systems",
"Eye",
"Ear, Nose, Sinus",
"Respiratory System",
"Mouth and Throat",
"Gastrointestinal System",
"Hepatobiliary System and Pancreas",
"Endocrine System",
"Skin and Breast",
"Subcutaneous Tissue and Fascia",
"Muscles",
"Tendons",
"Bursae and Ligaments",
"Head and Facial Bones",
"Upper Bones",
"Lower Bones",
"Upper Joints",
"Lower Joints",
"Urinary System",
"Female Reproductive System",
"Male Reproductive System",
"Anatomical Regions, General",
"Anatomical Regions, Upper Extremities",
"Anatomical Regions, Lower Extremities"))
as.data.frame(
section = "0",
axis = "2",
name = "Body System",
value = c(0:9, LETTERS[c(2:4, 6:8, 10:14, 16:25)]),
label = c("Central Nervous System and Cranial Nerves",
"Peripheral Nervous System",
"Heart and Great Vessels",
"Upper Arteries",
"Lower Arteries",
"Upper Veins",
"Lower Veins",
"Lymphatic and Hemic Systems",
"Eye",
"Ear, Nose, Sinus",
"Respiratory System",
"Mouth and Throat",
"Gastrointestinal System",
"Hepatobiliary System and Pancreas",
"Endocrine System",
"Skin and Breast",
"Subcutaneous Tissue and Fascia",
"Muscles",
"Tendons",
"Bursae and Ligaments",
"Head and Facial Bones",
"Upper Bones",
"Lower Bones",
"Upper Joints",
"Lower Joints",
"Urinary System",
"Female Reproductive System",
"Male Reproductive System",
"Anatomical Regions, General",
"Anatomical Regions, Upper Extremities",
"Anatomical Regions, Lower Extremities"))
data.frame(
section = "0",
axis = "2",
name = "Body System",
value = c(0:9, LETTERS[c(2:4, 6:8, 10:14, 16:25)]),
label = c("Central Nervous System and Cranial Nerves",
"Peripheral Nervous System",
"Heart and Great Vessels",
"Upper Arteries",
"Lower Arteries",
"Upper Veins",
"Lower Veins",
"Lymphatic and Hemic Systems",
"Eye",
"Ear, Nose, Sinus",
"Respiratory System",
"Mouth and Throat",
"Gastrointestinal System",
"Hepatobiliary System and Pancreas",
"Endocrine System",
"Skin and Breast",
"Subcutaneous Tissue and Fascia",
"Muscles",
"Tendons",
"Bursae and Ligaments",
"Head and Facial Bones",
"Upper Bones",
"Lower Bones",
"Upper Joints",
"Lower Joints",
"Urinary System",
"Female Reproductive System",
"Male Reproductive System",
"Anatomical Regions, General",
"Anatomical Regions, Upper Extremities",
"Anatomical Regions, Lower Extremities"))
devtools::load_all(".")
systems()
pcs()
pcs(0)
pcs('0y')
pcs('3y')
pcs('3')
pcs('30')
pcs('302')
pcs('3028')
pcs('30283')
pcs('30283b')
pcs('30283b1')
devtools::load_all(".")
pins::pin_read(mount_board(), "definitions")
definitions(section = "0", axis = "3")
c(0:9, "B", "C", "F", "G", "H", "X")
def <- pins::pin_read(mount_board(), "definitions")
def <- pins::pin_read(mount_board(), "definitions") |> data.table::as.data.table()
def <- pins::pin_read(mount_board(), "definitions")
def <- pins::pin_read(mount_board(), "definitions") |> data.table::as.data.table()
def
devtools::load_all(".")
definitions()
definitions(section = "0")
definitions(section = "0", axis = "4")
definitions(section = "0", axis = "4", label = "Vulva")
definitions(section = "0", axis = "4", label = "Vulva")$elements
definitions(section = "0", axis = "4", label = "Vulva") |> tidyr::unnest(elements)
devtools::load_all(".")
definitions(section = "0", axis = "4", label = "Vulva")
devtools::load_all(".")
definitions(section = "0", axis = "4", label = "Vulva")
def <- pins::pin_read(mount_board(), "definitions")
definitions(section = "0", axis = "4")
def <- definitions(section = "0", axis = "4")
def[['label']]
dplyr::filter(def,
stringi::stri_detect_regex(def[['label']],
paste0("(?i)", "Wrist")))
dplyr::filter(def,
stringi::stri_detect_regex(def[['label']],
paste0("(?i)", "wrist")))
dplyr::filter(def,
stringi::stri_detect_regex(def[['label']],
paste0("(?i)", "vulva")))
devtools::load_all(".")
definitions(section = "0", axis = "4")
definitions(section = "0", axis = "4", label = "aden*")
definitions(section = "0", axis = "4", label = "1st")
definitions(section = "0", axis = "4", label = "wrist")
definitions(section = "0", axis = "4", label = "wrist+")
definitions(section = "0", axis = "4", label = "Wrist+")
index(search = "radi*")
index(search = "radiat*")
devtools::load_all(".")
definitions(section = "0")
definitions(section = "0", label = "alteration")
definitions(section = "0")
definitions(section = "0", axis = "3", label = "alteration")
definitions(section = "0", axis = "3", label = "alteration+")
definitions(section = "0", axis = "3", label = "alteration")
definitions(section = "0", axis = "3")
devtools::load_all(".")
definitions(section = "0", axis = "3")
definitions(section = "0", axis = "3", label = "Drainage")
definitions(section = "0", axis = "3", label = "Drainage")$elements
definitions(section = "0", axis = "4")
definitions(section = "0", axis = "4", label = "Abdominal Aorta")
definitions(section = "0", axis = "4", label = "Abdominal Aorta")$elements
definitions(section = "4")
definitions(section = "5")
definitions(section = "6")
definitions(section = "7")
definitions(section = "8")
definitions(section = "9")
definitions(section = "B")
definitions(section = "B", label = "Fluoroscopy")
definitions(section = "B", label = "Fluoroscopy")$elements
index(search = "Abdominohysterectomy")
index(search = "Dilation")
index(search = "Resection")
index(search = "Resection|breast")
index()
index() |> dplyr::filter(!is.na(code))
library(tidyverse)
library(janitor)
`%nin%` <- function(x, table) match(x, table, nomatch = 0L) == 0L
ind <- pins::pin_read(procedural:::mount_board(), "source_index")
ind
ind
as.data.frame(sections())
as.data.frame(sections())[c('label', 'value')]
sections()[c('label', 'value')]
sections()[c('label', 'value')] |>
tidyr::unite('sections', label, value, sep = ' = ')
sections()[c('value', 'label')] |>
tidyr::unite('sections', label, value, sep = ' -> ')
sections()[c('value', 'label')] |>
tidyr::unite('sections', value, label, sep = ' -> ')
x <- sections()[c('value', 'label')] |>
tidyr::unite('sections', value, label, sep = ' -> ')
x |> delister()
x <- sections()[c('value', 'label')] |>
tidyr::unite('sections', value, label, sep = ' -> ') |>
delister()
x <- sections()[c('value', 'label')] |>
tidyr::unite('sections', value, label, sep = ' -> ') |>
delister()
ul <- cli::cli_ul()
cli::cli_li(x)
cli::cli_end(ul)
as.data.frame(sections())[c('value', 'label')] |>
tidyr::unite('sections', value, label, sep = ' -> ') |>
delister()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
devtools::load_all(".")
pcs()
data.frame(
stringsAsFactors = FALSE,
package = c("processx", "backports", "assertthat", "Matrix",
"magrittr", "rprojroot", "clisymbols", "prettyunits", "withr",
"desc", "igraph", "R6", "crayon", "debugme", "digest", "irlba",
"rcmdcheck", "callr", "pkgconfig", "lattice"),
dependencies = I(list(
c("assertthat", "crayon", "debugme", "R6"), character(0),
character(0), "lattice", character(0), "backports", character(0),
c("magrittr", "assertthat"), character(0),
c("assertthat", "R6", "crayon", "rprojroot"),
c("irlba", "magrittr", "Matrix", "pkgconfig"), character(0),
character(0), "crayon", character(0), "Matrix",
c("callr", "clisymbols", "crayon", "desc", "digest", "prettyunits",
"R6", "rprojroot", "withr"),
c("processx", "R6"), character(0), character(0)
))
)
data <- data.frame(
stringsAsFactors = FALSE,
package = c("processx", "backports", "assertthat", "Matrix",
"magrittr", "rprojroot", "clisymbols", "prettyunits", "withr",
"desc", "igraph", "R6", "crayon", "debugme", "digest", "irlba",
"rcmdcheck", "callr", "pkgconfig", "lattice"),
dependencies = I(list(
c("assertthat", "crayon", "debugme", "R6"), character(0),
character(0), "lattice", character(0), "backports", character(0),
c("magrittr", "assertthat"), character(0),
c("assertthat", "R6", "crayon", "rprojroot"),
c("irlba", "magrittr", "Matrix", "pkgconfig"), character(0),
character(0), "crayon", character(0), "Matrix",
c("callr", "clisymbols", "crayon", "desc", "digest", "prettyunits",
"R6", "rprojroot", "withr"),
c("processx", "R6"), character(0), character(0)
))
)
cli::tree(data)
pcs()
devtools::load_all(".")
pcs()
systems()
systems()[c("axis", "name", "value", "label")]
pins::pin_read(mount_board(), "tables_rows")
data.frame(
axis = 5L,
name = "Approach",
value = c(0:9, LETTERS[c(2:4, 6:8, 24)]),
label = c('Open',
'Open Approach',
'External Approach',
'Percutaneous',
'Percutaneous Endoscopic Approach',
'Percutaneous Approach',
'Via Natural or Artificial Opening',
'Via Natural or Artificial Opening Endoscopic',
'Via Natural or Artificial Opening Endoscopic Approach',
'Via Natural or Artificial Opening with Percutaneous Endoscopic Assistance'))
c(0:9, LETTERS[c(2:4, 6:8, 24)])
length(c(0:9, LETTERS[c(2:4, 6:8, 24)]))
devtools::load_all(".")
pcs()
pcs("0")
pcs("0f")
pcs("0f5")
pcs("0f5g")
pcs("0f")
pcs("0fj")
pcs("0fjg")
pcs("0fj")
pcs("0hj")
pcs("0hjp")
pcs("0hj")
pcs("0hjt")
pcs("0hj")
pcs("0h")
pcs("0hx")
pcs("0hx9")
pcs("0h")
pcs("0")
pcs("0p")
pcs("0ph")
pcs("0ph0")
select <- pins::pin_read(mount_board(), "tables_rows")
select
select |> dplyr::filter(code_1 == "0")
select |> dplyr::filter(code_1 == "0") |> dplyr::select(rows)
select |> dplyr::filter(code_1 == "0") |> dplyr::select(rows) |> tidyr::unnest(rows)
dplyr::filter(select, code_1 == "0") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5")
dplyr::filter(select, code_1 == "0") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "1") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "2") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
devtools::load_all(".")
dplyr::filter(select, code_1 == "3") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "X") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "9") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "B") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
dplyr::filter(select, code_1 == "F") |> dplyr::select(rows) |> tidyr::unnest(rows) |> dplyr::filter(axis == "5") |> dplyr::distinct()
c(0:9, LETTERS[c(2:4, 6:8, 24)])
devtools::load_all(".")
library(procedural)
